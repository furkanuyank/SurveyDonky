// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SurveyApp.Contexts;

namespace SurveyApp.Migrations.Survey
{
    [DbContext(typeof(SurveyContext))]
    [Migration("20220707125025_Initial_Create")]
    partial class Initial_Create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("survey")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SurveyApp.Entities.Survey", b =>
                {
                    b.Property<int>("SurveyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("survey_id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_date");

                    b.Property<string>("Description")
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("name");

                    b.Property<int>("SurveyCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<int>("WillPublished")
                        .HasColumnType("int")
                        .HasColumnName("will_published");

                    b.HasKey("SurveyId");

                    b.HasIndex("SurveyCategoryId");

                    b.ToTable("surveys");
                });

            modelBuilder.Entity("SurveyApp.Entities.SurveyAnswer", b =>
                {
                    b.Property<int>("SurveyAnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("answer_id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnswerText")
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)")
                        .HasColumnName("answer_text");

                    b.Property<int>("Choice")
                        .HasColumnType("int")
                        .HasColumnName("choice");

                    b.Property<int>("ChoiceIndex")
                        .HasColumnType("int")
                        .HasColumnName("choice_index");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("question_id");

                    b.HasKey("SurveyAnswerId");

                    b.HasIndex("QuestionId");

                    b.ToTable("answers");
                });

            modelBuilder.Entity("SurveyApp.Entities.SurveyCategory", b =>
                {
                    b.Property<int>("SurveyCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("name");

                    b.HasKey("SurveyCategoryId");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("SurveyApp.Entities.SurveyPollster", b =>
                {
                    b.Property<int>("SurveyPollsterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ip")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ip");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int")
                        .HasColumnName("survey_id");

                    b.HasKey("SurveyPollsterId");

                    b.HasIndex("SurveyId");

                    b.ToTable("pollster");
                });

            modelBuilder.Entity("SurveyApp.Entities.SurveyQuestion", b =>
                {
                    b.Property<int>("SurveyQuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("question_id")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("QuestionText")
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)")
                        .HasColumnName("question_text");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int")
                        .HasColumnName("survey_id");

                    b.HasKey("SurveyQuestionId");

                    b.HasIndex("SurveyId");

                    b.ToTable("questions");
                });

            modelBuilder.Entity("SurveyApp.Entities.Survey", b =>
                {
                    b.HasOne("SurveyApp.Entities.SurveyCategory", "SurveyCategory")
                        .WithMany("Surveys")
                        .HasForeignKey("SurveyCategoryId")
                        .HasConstraintName("category_survey_id_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SurveyCategory");
                });

            modelBuilder.Entity("SurveyApp.Entities.SurveyAnswer", b =>
                {
                    b.HasOne("SurveyApp.Entities.SurveyQuestion", "SurveyQuestion")
                        .WithMany("SurveyAnswers")
                        .HasForeignKey("QuestionId")
                        .HasConstraintName("s_question_answer_id_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SurveyQuestion");
                });

            modelBuilder.Entity("SurveyApp.Entities.SurveyPollster", b =>
                {
                    b.HasOne("SurveyApp.Entities.Survey", "Survey")
                        .WithMany("SurveyPollsters")
                        .HasForeignKey("SurveyId")
                        .HasConstraintName("survey_pollster_id_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("SurveyApp.Entities.SurveyQuestion", b =>
                {
                    b.HasOne("SurveyApp.Entities.Survey", "Survey")
                        .WithMany("SurveyQuestions")
                        .HasForeignKey("SurveyId")
                        .HasConstraintName("survey_question_id_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("SurveyApp.Entities.Survey", b =>
                {
                    b.Navigation("SurveyPollsters");

                    b.Navigation("SurveyQuestions");
                });

            modelBuilder.Entity("SurveyApp.Entities.SurveyCategory", b =>
                {
                    b.Navigation("Surveys");
                });

            modelBuilder.Entity("SurveyApp.Entities.SurveyQuestion", b =>
                {
                    b.Navigation("SurveyAnswers");
                });
#pragma warning restore 612, 618
        }
    }
}
