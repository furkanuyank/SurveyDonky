@model AttendTestModel

@{ 
    string[] choicesArray = new string[] { "A", "B", "C", "D", "E" };
}
<nav class="d-lg-block sidebar" style="position: sticky; top: 30%; width: 10%; background-color: #252526;">
    <div style="background-color: #252526;" class="list-group list-group-flush mx-3 mt-4">
        @for (int i = 0; i < Model.Questions.Count; i++)
        {
            <a style="background-color: #252526;" href="#Soru-@(i+1)" class="list-group-item list-group-item-action py-2 ripple dark-theme-texts href" aria-current="true">
                <span style="background-color: #252526;">Soru @(i+1)</span>
            </a>
        }
    </div>
</nav>
<script>
    $('.href').on("click", function () {
        debugger;
        var docHeight = ($(window).height() / 3);
        $('html,body').animate({
            scrollTop: ($($(this).attr('href')).offset().top - docHeight) + 1
        }, 1000);
    });
</script>

@{
    string[] lines;

}
<form asp-action="AttendTest" asp-controller="Test" asp-area="" method="post"
      class="w-75 mx-auto m-3">

    <div class="questions">
        <h1 class="dark-theme-texts">Testin Adı: @Model.Test.Name</h1>
        <input type="hidden" asp-for="@Model.Test.Name" />
        <br />
        <h5 class="dark-theme-texts">Açıklama: @Model.Test.Description</h5>
        <input type="hidden" asp-for="@Model.Test.Description" />
    </div>
    @Html.HiddenFor(model => model.Test.TestId)
    @Html.HiddenFor(model => model.Pid)
    @Html.HiddenFor(model => model.Test.CreatedDateTime)
    @Html.HiddenFor(model => model.Test.Duration)

    @for (int i = 0; i < Model.Answers.Count; i++)
    {
        <div class="questions">
            @Html.HiddenFor(model => model.Questions[i].TestQuestionId)
            @Html.HiddenFor(model => model.Questions[i].CorrectAnswer)
            <div>
                <label id="Soru-@(i + 1)" class="dark-theme-texts">@(i+1)) <br /> 
                    @{
                        lines = @Model.Questions[i].QuestionText.Split("\n");
                        foreach (var line in lines)
                        {
                            <label class="form-check-label dark-theme-texts" style="word-wrap: break-word" for="@i-0">@line</label>
                            <br />
                        }
                    }
                </label>
                <br />
                <br />
                @Html.HiddenFor(model=>model.Questions[i].QuestionText)
            </div>

            <div>
                <div class="form-check">
                    @for (int j = 0; j < Model.Answers[i].Count; j++)
                    {
                        <div class="form-check">
                            <input class="form-check-input answer" id="@i-@j" type="radio" asp-for="SelectedValues[i]" value=@j required />
                            <label class="form-check-label dark-theme-texts" for="@i-@j">
                                @choicesArray[j]) 
                                @{
                                    lines = Model.Answers[i][j].AnswerText.Split("\n");
                                    foreach (var line in lines)
                                    {
                                        <label class="form-check-label dark-theme-texts" style="word-wrap: break-word" for="@i-@j">@line</label>
                                        <br />
                                    }
                                }

                            </label>
                            @Html.HiddenFor(model => model.Answers[i][j].AnswerText)
                        </div>
                        <br />
                    }
                </div>
                @Html.HiddenFor(model => model.SelectedValues[i])
            </div>
            
        </div>
    }
<a asp-action="Index" asp-controller="Test" asp-area="" class="btn dark-theme-texts n">Geri Dön</a>
    <input type="submit" value="Kaydet" class="btn dark-theme-texts p" />
</form>

<style>
    .block {
        visibility: visible !important;
        position: unset !important;
    }

    .invis {
        visibility: hidden;
        position: absolute;
    }

    .questions {
        border: 1px solid black;
        border-radius: 5px;
        margin: 0.5rem;
        padding: 0.5rem;
        background-color: #0d3334;
        white-space: normal;
    }

    .dark-theme-texts {
        color: rgb(223,223,223);
    }

    .p {
        background-color: #495057;
        border-color: #0093ff;
    }

        .p:hover {
            color: #0093ff;
        }

    .n {
        background-color: #495057;
        border-color: #b5a800;
    }

        .n:hover {
            color: #b5a800;
        }
</style>